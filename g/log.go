package g

import (
	"fmt"
	"log"
	"os"
)

// These flags define which text to prefix to each log entry generated by the Logger.
const (
	// Bits or'ed together to control what's printed.
	// There is no control over the order they appear (the order listed
	// here) or the format they present (as described in the comments).
	// The prefix is followed by a colon only when Llongfile or Lshortfile
	// is specified.
	// For example, flags Ldate | Ltime (or LstdFlags) produce,
	//	2009/01/23 01:23:23 message
	// while flags Ldate | Ltime | Lmicroseconds | Llongfile produce,
	//	2009/01/23 01:23:23.123123 /a/b/c/d.go:23: message
	Ldate     = 1 << iota     // the date in the local time zone: 2009/01/23
	Ltime                     // the time in the local time zone: 01:23:23
	LstdFlags = Ldate | Ltime // initial values for the standard logger
)

// var std = New(os.Stderr, "", LstdFlags)
var std = log.New(os.Stderr, "", LstdFlags)

//Debug if env is Debug mode output debug string
func Debug(v ...interface{}) {
	if Config().Debug {
		std.Output(2, fmt.Sprintln(v...))
	}
}
